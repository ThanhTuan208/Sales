@using CRUD_asp.netMVC.Models.Product;
@model PaginatedList<Brand>

@{
    ViewData["Title"] = "Index";
    Layout = "_AccountLayout";
}

<style>

    table th, table td {
        text-align: center;
        vertical-align: middle;
    }

    .pagination .btn {
        transition: 0.3s;
    }

        .pagination .btn:hover {
            background-color: #f8f9fa;
            color: #000;
            transform: scale(1.1,1.2) translateY(10px);
        }

</style>
<h1 style="text-align: center; padding: 20px; text-shadow: 1px 2px 10px rgba(236, 210, 11, 0.6)">Sản phẩm</h1>
<div class="container">
    <div class="row">
        <div class="col-lg-3">
            <a asp-action="Create" class="btn btn-outline-success">Create New</a>
        </div>
        <div class="col-lg-4 offset-5">

            <form method="post" asp-action="Index">
                <div class="d-flex">
                    <input type="text" name="keyword" class="form-control me-2" placeholder="Find Product"
                           oninvalid="this.setCustomValidity('Vui lòng nhập từ khóa để tìm kiếm')" required />
                    <button type="submit" class="btn btn-outline-success">Find</button>
                </div>
            </form>
        </div>
    </div>
</div>

<table class="table table-hover text-center">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].ID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].PicturePath)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">
                        <img src="@item.PicturePath" alt="" style="width: 150px; height: 100px; object-fit: cover; border-radius:8px; text-decoration: none " class="img-fluid shadow-lg" />

                    </a>

                    @*                     <a asp-action="Edit" asp-route-id="@item.ID"
                       style="display: block; width: 150px; height: 100px;
              background: url('@item.PicturePath') no-repeat center center / cover;">
                    </a>
 *@
                </td>


                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-secondary">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-warning">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-outline-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination d-flex justify-content-center">
    @if (Model.PreviousPage)
    {
        <a class="btn btn-outline-warning m-1" asp-action="Index" asp-route-page="@(Model.PageCurrent - 1)">Previous</a>
    }

    @for (int i = 1; i <= Model.TotalPage; i++)
    {
        <a asp-action="Index" asp-route-page="@i" class="btn btn-outline-warning m-1@(i == Model.PageCurrent ? "active" : string.Empty)">@i</a>
    }

    @if (Model.NextPage)
    {
        <a class="btn btn-outline-warning m-1" asp-action="Index" asp-route-page="@(Model.PageCurrent + 1)">Next</a>
    }
</div>
